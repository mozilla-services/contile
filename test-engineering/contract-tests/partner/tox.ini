[tox]
envlist = black, flake8, mypy, py38
isolated_build = False

[testenv]
# Use Python 3.8 for all test environments
basepython = python3.8
setenv =
    RESPONSES_FILE = {toxinidir}/app/tests/responses.yml
    RESPONSES_DIR = {toxinidir}/app/tests/responses
    PYTHONPATH = {toxinidir}/app

# The app is not set up as a Python package
skip_install = True

# We use pip-tools to install compatible packages
deps = pip-tools

[testenv:py38]
commands_pre =
    # Install the pinned app and development requirements
    pip-sync {toxinidir}/requirements.txt {toxinidir}/dev-requirements.txt
    # Verify installed packages have compatible dependencies
    pip check -v
commands =
    # Run the unit tests
    pytest -v {posargs:app/tests}

[testenv:black]
commands_pre =
    # Install the pinned development requirements
    pip-sync {toxinidir}/dev-requirements.txt
commands =
    black --check app/

[testenv:flake8]
commands_pre =
    # Install the pinned development requirements
    pip-sync {toxinidir}/dev-requirements.txt
commands =
    flake8

[flake8]
max-line-length = 88
per-file-ignores =
    app/tests/test_app.py:E501

[testenv:mypy]
commands_pre =
    # Install the pinned app and development requirements
    pip-sync {toxinidir}/requirements.txt {toxinidir}/dev-requirements.txt
    # Verify installed packages have compatible dependencies
    pip check -v
commands =
    mypy app/
